@page "/user-details/{id}"
@model Reserve.Pages.Appointment.UserDetailsModel
@using Reserve.Core.Features.Appointment
@using Microsoft.Extensions.Localization
@using Reserve.Core
@inject IStringLocalizer<AppointmentLocalization> aL
@inject IStringLocalizer<Global> gL
@Html.AntiForgeryToken()
@if (TempData["error"] != null)
{
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.1.4/toastr.min.js"></script>
    <script type="text/javascript">
        toastr.options.closeButton = true;
        toastr.error('@TempData["error"]');
    </script>
}

<div class="modal fade" id="markAsDone" tabindex="-1" aria-labelledby="markAsDone" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="d-flex flex-column align-items-center m-3">
                <h1 class="modal-title fs-5 notification-title d-flex justify-content-center m-3" id="markAsDoneLabel">@aL["mark-appointment-as-done"]</h1>
                <div class="notification-border d-flex justify-content-center">
                    <p class="notification-text p-3">@aL["mark-appointment-as-done-confirmation"]</p>
                </div>
            </div>
            <div class="modal-footer d-flex justify-content-around border-0">
                <button type="button" hx-put="/finish-appointment/@Model.Id" hx-headers='js:{"X-CSRF-TOKEN": document.getElementsByName("__RequestVerificationToken")[0].value}' class="btn reserve-red-button" data-bs-dismiss="modal">@gL["yes"]</button>
                <button type="button" data-bs-dismiss="modal" class="btn reserve-blue-button">@gL["no"]</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="rescheduleAppointment" tabindex="-1" aria-labelledby="rescheduleAppointmentLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post">
                <div asp-validation-summary="ModelOnly"></div>
                <div class="d-flex flex-column align-items-center m-3">
                    <h1 class="modal-title fs-5 notification-title d-flex justify-content-center m-3" id="closeAppointmentLabel">@aL["reschedule-appointment"]</h1>
                    <div class="container d-flex justify-content-center mb-5">
                        <div class="notification-border d-flex justify-content-center">
                            <p class="notification-text p-3">@aL["choose-free-slot-for-rescheduling"]</p>
                        </div>
                    </div>
                    <div class="container form-group d-flex justify-content-evenly">
                        <label class="d-flex align-items-center" asp-for="SelectedSlot">@aL["new-date"]</label>
                        @Html.DropDownListFor(model => model.SelectedSlot, new SelectList(Model.FreeSlots.Select(item => new SelectListItem
                    {
                        Text = item?.StartTime.ToString("dd/MM/yyyy HH:mm") + " - " + item?.EndTime.ToString("dd/MM/yyyy HH:mm"),
                        Value = item?.Id.ToString()
                    }), "Value", "Text"), new {@class = "form-control w-50"})
                    </div>
                </div>
                <div class="modal-footer mb-3 d-flex justify-content-around border-0">
                    <button type="submit" class="btn reserve-red-button" data-bs-dismiss="modal">@aL["reschedule"]</button>
                    <button type="button" data-bs-dismiss="modal" class="btn reserve-blue-button">@gL["back"]</button>
                </div>
            </form>
        </div>
    </div>
</div>

@if(Model.AppointmentDetails?.AppointmentStatus == AppointmentState.Done)
{
    <div class="alert alert-success" role="alert">
        @aL["appointment-finished"]
    </div>
}

<div class="d-flex flex-column justify-content-center align-items-center align-items-center">
    <div class="notification-border d-flex flex-column align-items-center align-content-center">
        <h1 class="container notification-title mb-5">@aL["appointment-details"]</h1>
        <div class="d-flex flex-column justify-content-evenly align-content-center align-items-center w-100">
            <div class="d-flex flex-column justify-content-center align-content-center align-items-center mb-5 col-12">
                <div class="d-flex col-12 d-flex flex-column justify-content-center align-content-center align-items-center">
                    <div class="d-flex flex-column justify-content-evenly align-items-center mb-lg-5 col-12">
                        <p class="notification-text">@aL["reserver-name"]</p>
                        <p class="notification-text">@Model.AppointmentDetails?.ReserverName</p>
                    </div>
                    <div class="d-flex flex-column justify-content-evenly align-items-center mb-lg-5 col-12">
                        <p class="notification-text">@aL["reserver-email"]</p>
                        <p class="notification-text">@Model.AppointmentDetails?.ReserverEmail</p>
                    </div>
                    <div class="d-flex flex-column justify-content-evenly align-items-center mb-lg-5 col-12">
                        <p class="notification-text">@aL["reserver-phone-number"]</p>
                        <p class="notification-text">@Model.AppointmentDetails?.ReserverPhoneNumber</p>
                    </div>
                    <div class="d-flex flex-column justify-content-evenly align-items-center mb-lg-5 col-12">
                        <p class="notification-text">@aL["appointment-start-date"]</p>
                        <p class="notification-text">@Model.AppointmentDetails?.Slot?.StartTime</p>
                    </div>
                    <div class="d-flex flex-column justify-content-evenly align-items-center col-12">
                        <p class="notification-text">@aL["appointment-end-date"]</p>
                        <p class="notification-text">@Model.AppointmentDetails?.Slot?.EndTime</p>
                    </div>
                </div>
            </div>
            @if(Model.AppointmentDetails?.AppointmentStatus != AppointmentState.Done)
        {
            <div class="d-flex flex-lg-row flex-column justify-content-evenly">
                    @if (Model.FreeSlots.Count > 0)
                {
                    <a class="dashboard-items btn reserve-red-button m-0 m-sm-3" data-bs-toggle="modal" data-bs-target="#rescheduleAppointment">@aL["reschedule"]</a>
                }
                else
                {
                    <p class="dashboard-items m-0 m-sm-3 d-flex align-items-center notification-text">@aL["no-slots-for-rescheduling"]</p>
                }
                    <a class="dashboard-items btn reserve-blue-button m-0 m-sm-3" data-bs-toggle="modal" data-bs-target="#markAsDone">@aL["mark-as-done"]</a>
                    <a class="dashboard-items btn reserve-blue-button m-0 m-sm-3" href="@Url.Page("UpcomingAppointments", new {id = Model.AppointmentDetails?.Slot?.AppointmentCalendar?.Id})">@aL["back-to-dashboard"]</a>
                </div>
        }
        else
        {
            <div class="d-flex flex-lg-row flex-column justify-content-evenly">
                    <a class="dashboard-items btn reserve-blue-button m-0 m-sm-3" href="@Url.Page("UpcomingAppointments", new {id = Model.AppointmentDetails?.Slot?.AppointmentCalendar?.Id})">@aL["back-to-dashboard"]</a>
                </div>
        }
        </div>
    </div>
</div>